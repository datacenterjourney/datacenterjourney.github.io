<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Datacenter Journey on Datacenter Journey</title>
    <link>https://datacenterjourney.com/</link>
    <description>Recent content in Datacenter Journey on Datacenter Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Sep 2019 21:10:43 -0700</lastBuildDate>
    <atom:link href="https://datacenterjourney.com/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Project Pacific Announcement</title>
      <link>https://datacenterjourney.com/2019/project-pacific-announcement/</link>
      <pubDate>Thu, 05 Sep 2019 21:10:43 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/project-pacific-announcement/</guid>
      <description>&lt;p&gt;For those of you that haven&amp;rsquo;t heard VMware made a few big announcements during this year&amp;rsquo;s VMworld US. One of the more interesting to me was the announcement of Project Pacific. In my opinion, this has to be one of the more critical and landscape changing for system administrators and developers. Think of it as the next evolution of vSphere and step ladder for organizations to be able to implement an application platform.&lt;/p&gt;

&lt;p&gt;So what exactly is Project Pacific? It&amp;rsquo;s a re-architecture of vSphere to integrate an embed native Kubernetes. What this does is aligns the management of the infrastructure to that of the modern application builds. Many of the new applications are built using containers and leveraging Kubernetes to be able to manage the orchestration of those containers. However, many of those containers still need to communicate with traditional stateful application workloads like databases. Those stateful applications are mostly running in virtual machines.&lt;/p&gt;

&lt;p&gt;Many admins are familiar with leveraging many of the vSphere features like vMotion, snapshots, security, policies, encryption, and setting resource limits and reservations for VMs. Now imagine the ability to utilize many of those same features for containers using Kubernetes Namespaces. Now to take it even a step further what if you could manage both of those environments and polices from the same management platform. That is what precisely what Project Pacific aims to accomplish. Unifying and simplifying management of the modern application is transformative and allows organizations to manage their infrastructure in a way that was not previously possible.&lt;/p&gt;

&lt;p&gt;To learn more, I recommend checking out link below to VMware&amp;rsquo;s blog entry Introducing Project Pacific and the additional links provided on that page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://blogs.vmware.com/vsphere/2019/08/introducing-project-pacific.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Introducing Project Pacific&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First IT Job - Helpdesk</title>
      <link>https://datacenterjourney.com/2019/first-it-job-helpdesk/</link>
      <pubDate>Tue, 27 Aug 2019 10:01:18 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/first-it-job-helpdesk/</guid>
      <description>&lt;p&gt;Picking up on my Datacenter Journey from the last post. Now came the thrill of starting to work in the IT field as a Helpdesk technician. Information Systems had been my area of study for the past four and a half years in college. Little did I know that much of what I had learned in school wouldn&amp;rsquo;t benefit me much at the start of my career, but would prove valuable later on. Also, much of my enthusiasm would start to die off after completing my initial training, which took place during the day shift.  For those that don&amp;rsquo;t know gaming is a 24-hour business in Las Vegas and that meant they would need support around the clock. In addition to the local establishments, Boyd Gaming also owned several casinos outside of Las Vegas as well as a race track.&lt;/p&gt;

&lt;p&gt;I started working at the corporate office, which used to be located behind where the Stardust Hotel &amp;amp; Casino once stood. I started my first week during the day shift, 8 am to 4 pm. During this time, I got a quick rundown of the systems that I would be using and supporting. I was completely overwhelmed and wasn&amp;rsquo;t exactly sure what I had gotten myself into. After about two weeks, I moved to my permanent work schedule, which was the graveyard shift, midnight to 8am, along with one other person.  The person I was working with, Matt was an excellent teacher. He filled in many of the training gaps that I was missing during my short two-week day shift training. It also gave me the time to really master the processes I had been shown during the day and learn procedures that were done by the night shift.&lt;/p&gt;

&lt;p&gt;Apart from learning the technical skills that are required to troubleshoot a users issue to help them resolved their problems, I had to work on my communication skills. For anyone that has ever had a job performing remote tech support, they can confirm that it&amp;rsquo;s not the easiest thing to do daily. It can prove to be very challenging getting a non-technical person to explain to you the technical issue that they are having over the phone. It didn&amp;rsquo;t take me long to learn patience, become an active listener, and be able to explain technical procedures in a non-technical manner. All of those skills are ones that have helped me all throughout my career and continue to be something I work on improving today.&lt;/p&gt;

&lt;p&gt;I have always been the type of person that needs to be busy and doesn&amp;rsquo;t like to sit around doing nothing for too long. While the graveyard shift was a perfect place to start and learn how to assist users with remote support, it wasn&amp;rsquo;t bustling. After about six months, the repetitiveness and lack of new challenges were beginning to take its toll on my enthusiasm. I was starting to get comfortable in my role and began speaking to my co-workers about other duties that I could possibly take on. Those conversations would prove valuable because I was informed that there was going to be an opening for a Systems Operator for the day shift.&lt;/p&gt;

&lt;p&gt;This was the ideal opportunity to get off the graveyard shift and hopefully learn some new skills. It was also the perfect way to be able to have my work become more visible to others. I put in my application, and to my surprise, there were no other applicants internally that wanted to take that position. So once the job was officially open and available, I moved into the role and started learning the duties that were required in that position.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing PowerShell Core - MacOS</title>
      <link>https://datacenterjourney.com/2019/installing-powershell-core-macos/</link>
      <pubDate>Wed, 14 Aug 2019 05:47:41 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/installing-powershell-core-macos/</guid>
      <description>

&lt;p&gt;A thought occurred to me after my last post that there might be users out there that are new to macOS and PowerShell. So to help everyone out, I imagined it might be useful to explain how to install PowerShell on macOS. The task is two parts comprised of first installing Homebrew and then using Homebrew to install PowerShell.&lt;/p&gt;

&lt;h3 id=&#34;installing-homebrew&#34;&gt;Installing Homebrew&lt;/h3&gt;

&lt;p&gt;Open a terminal window and then run the following command at the prompt:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/ruby -e &amp;quot;$(curl -fsSLÂ https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command will output information about what it will be installing and the directories it will create. At this point, you will be prompted to press the &amp;ldquo;RETURN&amp;rdquo; key to continue or any other key to abort the installation like in the screenshot below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/Homebrew1.png&#34; alt=&#34;Homebrew1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Shortly after you hit the &amp;ldquo;RETURN&amp;rdquo; key, a prompted for the password of the user account that is currently logged in will appear.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/Homebrew2.png&#34; alt=&#34;Homebrew2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Homebrew will continue to create several directories and start downloading necessary packages to complete the installation like Xcode command-line tools. After some time you should see a message showing &amp;ldquo;&lt;strong&gt;==&amp;gt; Installation successful!&lt;/strong&gt;&amp;rdquo; and you will be back at a command prompt. You have now successfully installed Homebrew and can use it to install and manage many different packages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/Homebrew3.png&#34; alt=&#34;Homebrew3&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;installing-powershell&#34;&gt;Installing PowerShell&lt;/h3&gt;

&lt;p&gt;Now that you have Homebrew installed we will use it to install the latest stable release of PowerShell for macOS. I have found this to be the easiest and preferred method to install and manage PowerShell on macOS. Keep in mind that PowerShell Core is supported only on macOS 10.12 (Sierra) and higher. The beautiful thing about using this method is that Homebrew will install any required dependencies packaged with the installer. In this case, it also installs OpenSSL.&lt;/p&gt;

&lt;p&gt;At the command prompt, you need to enter the next command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew cask install powershell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After it has downloaded a few required files, it will prompt for the current user&amp;rsquo;s password. When the installation is complete, you will see a foaming beer mug and the message that &amp;ldquo;powershell was successfully installed!&amp;rdquo; and be returned to a command prompt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/PowerShell1.png&#34; alt=&#34;PowerShell1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, verify that your installation is working correctly by running the command to start Powershell. If you want to run PowerShell with elevated privileges, then you will need to run it with the &amp;ldquo;sudo&amp;rdquo; command and enter the logged-on user&amp;rsquo;s password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pwsh

sudo pwsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If PowerShell is working correctly, then you will see output similar to the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/PowerShell2.png&#34; alt=&#34;PowerShell2&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;updating-powershell&#34;&gt;Updating PowerShell&lt;/h3&gt;

&lt;p&gt;As new stable versions of PowerShell are released, you can easily update the version you have installed using Homebrew with the commands listed below. First, you update Homebrew&amp;rsquo;s formulae to make sure you have that up to date. You will see output similar to the two images below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/Homebrew4.png&#34; alt=&#34;Homebrew4&#34; /&gt;
&lt;img src=&#34;https://datacenterjourney.com/img/Homebrew5.png&#34; alt=&#34;Homebrew5&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Once that is complete you can then run the command to upgrade PowerShell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew cask upgrade powershell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again you are prompted for the logged in user&amp;rsquo;s password to continue with the installation. Then it will finish the upgrade and you will once again be brought to the command prompt with a message before that &amp;ldquo;&lt;strong&gt;powershell was successfully upgraded!&lt;/strong&gt;&amp;ldquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://datacenterjourney.com/img/PowerShell3.png&#34; alt=&#34;PowerShell3&#34; /&gt;
&lt;img src=&#34;https://datacenterjourney.com/img/PowerShell4.png&#34; alt=&#34;PowerShell4&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I hope this was informative and helpful to anyone just getting started with PowerShell on macOS.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ESXi USB Installer Scripted - Single</title>
      <link>https://datacenterjourney.com/2019/esxi-usb-installer-scripted-single/</link>
      <pubDate>Mon, 12 Aug 2019 05:52:43 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/esxi-usb-installer-scripted-single/</guid>
      <description>

&lt;p&gt;In one of my previous posts, I shared the steps to manually configure a USB drive to create an unattended ESXi installation and have it install on itself. The process is not complicated and makes the installation of ESXi much quicker and zero-touch. The manual process of creating USB drives wasn&amp;rsquo;t bad, but it wasn&amp;rsquo;t very efficient and did not scale well. To be able to generate more than a few at a time turned out to be time-consuming.  As you will come to find out, I like to avoid doing things manually and scripting or automating any tasks that I can. This aids in making things more efficient for myself or others and frees everyone up to work on other tasks or projects.&lt;br /&gt;
&lt;br&gt;
Over the years, I have become more comfortable and proficient at using PowerShell for scripting tasks. The fact that it is now cross-platform with the release of PowerShell Core makes it my go-to scripting language. One of the great things about PowerShell is that while you are in the shell, you are still able to run native bash or dos commands. I then took the commands for creating the ESXi unattended USB installer and wrapped them in a module that I could share. When I set out to create this, I wanted it to be as simple as possible and make sure that I took care of all the error checking. I will break down the two of the functions that the module exports so that you can understand it and modify for your needs if necessary. Keep in mind that the module is by no means perfect, and there are still many improvements that can be made to make it even better.&lt;br /&gt;
&lt;br&gt;
&lt;strong&gt;Note this module will only run on macOS and requires PowerShell to be run with &amp;ldquo;sudo&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;reset-esxusb&#34;&gt;Reset-EsxUsb&lt;/h3&gt;

&lt;p&gt;This cmdlet looks for connected USB drives and will prompt the user to see if they want to wipe them. If the user chooses not to format the USB drive, it will give a list of all the disk(s) currently mounted using &lt;em&gt;diskutil&lt;/em&gt;.  Unless the USB drive(s) to use is new SanDisk USB the user will need to format the drive to have the next module work correctly.&lt;/p&gt;

&lt;h3 id=&#34;new-esxusb&#34;&gt;New-EsxUsb&lt;/h3&gt;

&lt;p&gt;This cmdlet is where all the real magic happens to create the unattended ESXi installer. This command does several things behind the scenes, and I will highlight some of the main ones. First, it checks to see if there any approved ESXi ISO versions mounted. If it finds more than one ISO mounted it will prompt to see which version you want to use. Next, it will check to see if there is a properly formatted USB drive connected to use. Finally, it will start the process of creating a bootable ESXi installer, modify the BOOT.CFG files, and create a ks.cfg kickstart script with the supplied information to configure on the ESXi host.&lt;/p&gt;

&lt;p&gt;I created the module with all of the proper help information and examples, which you can get by running the &lt;code&gt;Get-Help New-EsxUsb&lt;/code&gt; command. Here is a quick example of how to use the cmdlet for a single ESXi installer.&lt;br /&gt;
&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-PowerShell&#34;&gt;New-EsxUsb -EsxPasswd MyP@ssword1 -EsxHostname TST-HOST -EsxVlanId 1919 -EsxIpAddr 192.168.19.19 -EsxSubnet 255.255.255.0 -EsxGateway 192.168.19.1 -EsxDns1 192.168.19.5 -EsxDns2 8.8.8.8 -EsxFirstNic vmnic0 -EsxSecondNic vmnic1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Below you will find a link to the GitHub repository that hosts my UnattendedEsxUsb module. Feel free to download and make any adjustments that you might need. If you find any ways to improve the module or if there is something you would like me to fix, please reach out to me. I&amp;rsquo;ll do my best to make the modifications promptly. Stay tuned for my next blog post where I explain how to create multiple USB installers using a CSV file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/datacenterjourney/UnattendedEsxUsb&#34; title=&#34;download UnattendedEsxUsb module&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;UnattendedEsxUsb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ESXi USB Installer - Manual</title>
      <link>https://datacenterjourney.com/2019/esxi-usb-installer-manual/</link>
      <pubDate>Sun, 28 Jul 2019 05:06:05 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/esxi-usb-installer-manual/</guid>
      <description>

&lt;p&gt;Recently I came across the need to install hundreds of ESXi hosts on USB sticks and wanted to accomplish this in the easiest way possible. While installing ESXi isn&amp;rsquo;t complicated, it can be time-consuming and would require the need to be swapping the monitor and keyboard continually or having multiple monitors and keyboards. I wanted an unattended install method where I wouldn&amp;rsquo;t need to continue to touch each machine and have to go back configure it. I was not only able to accomplish this task, but also have the installer install ESXi on itself to minimize the number of USB drives needed. The plan was to start the install, walk away, and then come back to it after the installation was complete. Below are the steps I used on MacOS to be able to accomplish this task. Look for my next post where I script the USB creation process to make it even easier and faster.&lt;/p&gt;

&lt;p&gt;Below are the manual steps to accomplish this using MacOS broken down into two different parts:
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;creating-bootable-usb-esxi-installer-on-mac-to-install-on-itself&#34;&gt;Creating bootable USB ESXi Installer on Mac to install on itself&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;Mount the required ESXi installer ISO by double-clicking it or running the command in Terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hdiutil mount /path/to/ESXi.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Insert the USB flash drive where you want ESXi installed and start up &lt;strong&gt;&lt;em&gt;Disk Utility&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Select the USB flash drive so that we can erase it and format it with the following options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Format: &lt;strong&gt;MS-DOS (FAT)&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Scheme: &lt;strong&gt;Master Boot Record&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Name: (example) &lt;strong&gt;ESXI-6-7-U2&lt;/strong&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After erasing the drive, we need to mark the partition as &lt;em&gt;active&lt;/em&gt;. Disk Utility does not support marking partitions as active so we need to use Terminal.&lt;/p&gt;

&lt;p&gt;List all the mounted volumes to determine the identifier for the USB flash drive you inserted.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;diskutil list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Locate the disk identifier which should be something similar to &lt;em&gt;/dev/disk3s1&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Now to unmount the USB flash drive, note this is not the same as eject. Make sure to replace &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; with the proper numbers obtained from the previous command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;diskutil unmount /dev/diskXsY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start up the command-line partitioner &lt;em&gt;fdisk&lt;/em&gt; in interactive mode which will require administrator privileges on the drive you identified in the previous commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo fdisk -e /dev/diskXsY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once in fdisk, you flag the first partition on the volume as active and bootable:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;f 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, you write the changes:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;write
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, you exit fdisk interactive mode:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;quit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to remount the USB flash drive using the diskutil command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;disktuil mount /dev/diskXsY
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you will list the volumes of the mounted ESXi installer ISO and the USB flash drive you just formatted:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /Volumes/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Copy the entire contents of the ESXi ISO to the root of the USB flash drive either through Finder or terminal using the the command below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -R /Volumes/ESXI-6.7.0-20190504001-STANDARD/* /ESXI-6-7-U2/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the USB flash drive rename the file ISOLINUX.CFG to SYSLINUX.CFG:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /Volumes/ESXI-6-7-U2/ISOLINUX.CFG /Volumes/ESXI-6-7-U2/SYSLINUX.CFG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now in order to have the flash drive boot automatically to the kickstart file that will be placed on the root of the install USB flash drive we need to edit the two BOOT.CFG files in the following locations using vi or nano:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vi /Volumes/ESXI-6-7-U2/BOOT.CFG
nano /Volumes/ESXI-6-7-U2/EFI/BOOT/BOOT.CFG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Find the line that starts with &lt;em&gt;kernelopt&lt;/em&gt; and delete everything after the equal sign. Then we will add the information in bold below to state that we want to load a kickstart script and list the location and name of the file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;kernelopt=&lt;strong&gt;ks=usb:/ks.cfg&lt;/strong&gt;&lt;br /&gt;
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;editing-the-kickstart-file-to-configure-the-esxi-host&#34;&gt;&lt;em&gt;Editing the kickstart file to configure the ESXi host:&lt;/em&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Download the attached &lt;strong&gt;ks.cfg&lt;/strong&gt; file from my GitHub account to use and edit: &lt;a href=&#34;https://github.com/datacenterjourney/miscellaneous_files/blob/master/ks.cfg&#34; title=&#34;download ks.cfg file&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;ks.cfg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Using a text editor (not Word) you will need to edit lines 12, 21, 30, 31, 40, and 43&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Line 12 you will set the &amp;lsquo;root&amp;rsquo; password by replacing &lt;strong&gt;&lt;em&gt;{PASSWD}&lt;/em&gt;&lt;/strong&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Line 21 you will change the information after the equal sign of the following &lt;strong&gt;device=&lt;em&gt;{NIC1}&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;hostname=&lt;em&gt;{HOSTNAME}&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;vlanid=&lt;em&gt;{VLANID}&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;ip=&lt;em&gt;{IPADDR}&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;netmask=&lt;em&gt;{SUBNET}&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;gateway=&lt;em&gt;{GATEWAY}&lt;/em&gt;&lt;/strong&gt;, and &lt;strong&gt;nameserver=&lt;em&gt;{DNS1},{DNS2}&lt;/em&gt;&lt;/strong&gt; as needed.&lt;/li&gt;
&lt;li&gt;Line 30 you will set IP or hostname of the NTP server replacing &lt;strong&gt;&lt;em&gt;{NTP1}&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Line 31 if you have a second NTP IP or hostname you will replace &lt;strong&gt;&lt;em&gt;{NTP2}&lt;/em&gt;&lt;/strong&gt;. If you don&amp;rsquo;t have or want to use a second NTP server then you can comment out the line by placing a &amp;ldquo;&lt;strong&gt;#&lt;/strong&gt;&amp;rdquo; at the beginning of the line.&lt;/li&gt;
&lt;li&gt;Line 40 you will again replace &lt;strong&gt;&lt;em&gt;{HOSTNAME}&lt;/em&gt;&lt;/strong&gt; with the same name you used in line 21.&lt;/li&gt;
&lt;li&gt;Line 43 you will replace the information after the equal sign &lt;strong&gt;uplink-name=&lt;em&gt;{NIC2}&lt;/em&gt;&lt;/strong&gt; if you want to set a second management nic. If you only have one nic or don&amp;rsquo;t want assign a second network adater then you can comment out the line by placing a &amp;ldquo;&lt;strong&gt;#&lt;/strong&gt;&amp;rdquo; at the beginning of the line.&lt;/li&gt;
&lt;li&gt;Save the file and then copy to the root of the USB flash drive you created as the install drive&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
You now have a fully configured unattended USB ESXi installation drive. All that is left to do is plug in the USB drive to the hardware you want to configure and power it on. I hope this helps you and ultimately saves you time when having to install ESXi on multiple hosts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Journey Start</title>
      <link>https://datacenterjourney.com/2019/journeystart/</link>
      <pubDate>Tue, 04 Jun 2019 17:14:24 -0700</pubDate>
      
      <guid>https://datacenterjourney.com/2019/journeystart/</guid>
      <description>&lt;p&gt;To give you a little bit of background on me and how I got started in my IT  career back in 2002. As a recent college graduate with little to no experience and only armed with a bachelor degree in Management Information Systems, I thought the job offers were going to be plentiful for me to choose from just by applying. Little did I know that it was not as easy as listing the fact that I had a piece a paper showing that I could learn and pass tests. After just a few months of job searching, I was made aware of an essential skill that I would need if I were to progress. It was the fact that to get anywhere in my future career that I would have to start networking and building relationships.&lt;/p&gt;

&lt;p&gt;A friend of mine who worked at the Fremont Hotel &amp;amp; Casino, as a banquet supervisor, reached out to me letting me know that he wanted to introduce me to someone who might be able to help me get into an IT position. The person he had me meet with was the cage cashier manager. I thought to myself, how is she going to help get me into IT??? Not having any success on my own trying to land a job I decided to meet with her and hear what she had to tell me. It turns out that she had become good friends with the manager of the helpdesk for Boyd Gaming. What she was offering me was a position to work for her in the cage, and after six months, she would help me apply for a transfer to the corporate helpdesk. The catch was that there was no guarantee as to when or if there would be an open position once I was eligible, and she would be taking note of my work ethic and personality.&lt;/p&gt;

&lt;p&gt;I decided to take a chance on the offer and start my position as a cage cashier. It couldn&amp;rsquo;t be harder than my current job, which was working at my dad&amp;rsquo;s company doing masonry work.  I kept a constant eye on the internal job postings, and after just eight months as a cashier, there was an opening at the helpdesk. True to her word, the cage manager helped me apply for the transfer and gave a great reference based on my work ethic and personality. I was scheduled for an interview during which I was able to convey to Theresa, the helpdesk manager, that I would be a good fit for the position. She felt confident enough that I would be able to do well in the role and decided to hire me and be able to prove her right.&lt;/p&gt;

&lt;p&gt;The lessons learned here are something that I feel cannot be stressed enough. First, take the time to make and grow your personal and professional network of contacts because you never know when they might be able to help you out. However, don&amp;rsquo;t build these relationships for the sole purpose of trying to get ahead. Next, always work hard no matter what the task at hand. People will take notice of your work ethic, and it goes a long way towards building your reputation. Lastly, there will be times when you feel like nothing is going in your favor. Be persistent and never give up. I believe that life like baseball is a game of failure. Most of the time, things won&amp;rsquo;t go your way just because you want them to. It&amp;rsquo;s how you handle those failures and learn from them that will help you grow as a person and a professional.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://datacenterjourney.com/about/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://datacenterjourney.com/about/</guid>
      <description>

&lt;p&gt;Welcome, my name is Manuel Martinez, and I&amp;rsquo;m from Las Vegas, NV. I have been in the IT field since graduating from college back in 2002. I have worked my way up the ranks through the many positions I have held in different industries. This site is a collection of stories, notes, and information that I have gathered along the way that I hope helps others in the community along their journey.&lt;/p&gt;

&lt;p&gt;The purpose of my site is to get to learn a little about me, my career and tips I&amp;rsquo;ve gathered along the way about all things data center. I&amp;rsquo;ll be sharing stories about the different roles that I have held, the skills I learned along the way, and how I used them to be able to evolve in my career. There are tips about how I learned those new skills and have used them in my past and current jobs, and some of the new skills I&amp;rsquo;ve acquired or am in the process of learning.&lt;/p&gt;

&lt;p&gt;While most of my focus is around VMware and it&amp;rsquo;s products, I also enjoy working with Cisco UCS and PowerShell. Those products have led me towards other technologies in the Software Defined Data Center and around automation. There is a combination of technical deep dives around products I&amp;rsquo;m familiar with, high-level summaries about technologies I&amp;rsquo;m learning about, and reference material for others to use for learning.&lt;/p&gt;

&lt;p&gt;I hope that you find the material here entertaining, informative, or helpful and look forward to sharing my data center journey with you and having you join me for the rest of the trip.&lt;/p&gt;

&lt;h3 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The views and opinions expressed here are my own and do not reflect the views of any of my past or current employers.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
